from capstone import Cs, CS_ARCH_X86, CS_MODE_64
start = 0x7ff933f20100
hex_words = "0xe2 0x3 0x74 0x26 0x4c 0x1 0xd8 0x48 0x3 0x85 0xf8 0x2 0x0 0x0 0x48 0x1 0xd0 0x48 0x83 0xc0 0x2 0x31 0xf6 0x49 0xc1 0xe5 0x8 0xf 0xb6 0x3c 0x30 0x49 0x9 0xfd 0x48 0xff 0xc6 0x49 0x39 0xf2 0x75 0xed 0x48 0xff 0xc3 0x49 0x29 0xd8 0x4d 0x39 0xc5 0xf 0x87 0x95 0x2 0x0 0x0 0x49 0x1 0xd9 0x4c 0x89 0x8d 0x20 0x2 0x0 0x0 0x4c 0x89 0xad 0x28 0x2 0x0 0x0 0x4d 0x39 0xe8 0xf 0x84 0x7b 0x2 0x0 0x0 0x4d 0x1 0xe9 0x41 0x80 0x39 0x30 0xf 0x85 0x6e 0x2 0x0 0x0 0x4c 0x89 0xe8 0x48 0xf7 0xd0 0x49 0x1 0xc0 0xf 0x84 0x5f 0x2 0x0 0x0 0x49 0xff 0xc1 0x49 0xf 0xbe 0x39 0x48 0x85 0xff 0x48 0x89 0x9d 0xf0 0x2 0x0 0x0 0x78 0xa 0xbe 0x1 0x0 0x0 0x0 0xe9 0xd6 0x0 0x0 0x0 0x40 0x80 0xe7 0x7f 0x8d 0x47 0xff 0x3c 0x3 0xf 0x87 0x33 0x2 0x0 0x0 0x40 0xf 0xb6 0xf7 0x49 0x39 0xf0 0xf 0x86 0x26 0x2 0x0 0x0 0x48 0x8d 0x46 0xff 0x48 0x83 0xf8 0x3 0x73 0x9 0xb8 0x1 0x0 0x0 0x0 0x31 0xff 0xeb 0x68 0x89 0xf3 0x83 0xe3 0x4 0x4c 0x8b 0x95 0xf8 0x2 0x0 0x0 0x48 0x8b 0xbd 0xf0 0x2 0x0 0x0 0x4d 0x8d 0x14 0x3a 0x4d 0x1 0xda 0x4d 0x1 0xea 0x4e 0x8d 0x34 0x12 0x49 0x83 0xc6 0x7 0x31 0xff 0x31 0xc0 0x45 0xf 0xb6 0x54 0x6 0xfd 0x48 0xc1 0xe7 0x10 0x41 0xc1 0xe2 0x8 0x49 0x9 0xfa 0x41 0xf 0xb6 0x7c 0x6 0xfe 0x4c 0x9 0xd7 0x45 0xf" 
code = bytes(int(x, 16) for x in hex_words.split())
md = Cs(CS_ARCH_X86, CS_MODE_64)
for insn in md.disasm(code, start):
    if '0x2c0' in insn.op_str:
        print(f"0x{insn.address:x}: {insn.mnemonic} {insn.op_str}")
