from capstone import Cs, CS_ARCH_X86, CS_MODE_64
hex_words = "0x48 0x83 0xbd 0xd8 0x2 0x0 0x0 0x10 0x72 0x34 0x48 0x8b 0x8d 0xc0 0x2 0x0 0x0 0xeb 0x32 0x65 0x48 0x8b 0x4 0x25 0x60 0x0 0x0 0x0 0x48 0xb9 0x1f 0x2c 0xf3 0x20 0x6a 0xcc 0x28 0xa2 0x48 0x39 0x48 0x30 0xf 0x85 0x4 0xd9 0x2 0x0 0x46 0x69 0xaf 0xb5 0xcc 0xaf 0x95 0x9d 0x89 0x12 0x57 0x43 0xf7 0xd 0x48 0x8d 0x8d 0xc0 0x2 0x0 0x0 0x48 0x89 0x8d 0x20 0x2 0x0 0x0 0x48 0x89 0x85 0x28 0x2 0x0 0x0 0x48 0x8d 0x8d 0x20 0x2 0x0 0x0 0xe8 0x71 0xf1 0x3e 0x0 0x84 0xc0 0xf 0x85 0xba 0x3 0x0 0x0 0xf 0x31 0x48 0xc1 0xe2 0x20 0x48 0x9 0xc2 0x48 0xb8 0x2d 0x7f 0x95 0x4c 0x2d 0xf4 0x51 0x58 0x48 0xf 0xaf 0xc2 0x48 0xb9"
code = bytes(int(x, 16) for x in hex_words.split())
addr = 0x7ff933f205c0
md = Cs(CS_ARCH_X86, CS_MODE_64)
for insn in md.disasm(code, addr):
    print(f"0x{insn.address:x}: {insn.mnemonic} {insn.op_str}")
