from capstone import Cs, CS_ARCH_X86, CS_MODE_64
start = 0x7ff933f204f0
hex_words = "0xf 0x74 0x8d 0x10 0x2 0x0 0x0 0x66 0xf 0x74 0x85 0x0 0x2 0x0 0x0 0x66 0xf 0xdb 0xc1 0x66 0xf 0xd7 0xc0 0x3d 0xff 0xff 0x0 0x0 0xf 0x84 0xc1 0x0 0x0 0x0 0xc7 0x85 0x20 0x2 0x0 0x0 0xc3 0x35 0x10 0x81 0x83 0xbd 0x20 0x2 0x0 0x0 0x0 0xf 0x89 0x48 0x6 0x0 0x0 0xf3 0xf 0x6f 0x5 0xbf 0xb0 0x73 0xff 0xf3 0xf 0x6f 0xd 0xc7 0xb0 0x73 0xff 0x66 0xf 0x74 0x8d 0x10 0x2 0x0 0x0 0x66 0xf 0x74 0x85 0x0 0x2 0x0 0x0 0x66 0xf 0xdb 0xc1 0x66 0xf 0xd7 0xc0 0x3d 0xff 0xff 0x0 0x0 0x74 0x7b 0xc7 0x85 0x20 0x2 0x0 0x0 0xc3 0x35 0x10 0x81 0x83 0xbd 0x20 0x2 0x0 0x0 0x0 0xf 0x89 0x2 0x6 0x0 0x0 0xf3 0xf 0x6f 0x5 0x99 0xb0 0x73 0xff 0xf3 0xf 0x6f 0xd 0xa1 0xb0 0x73 0xff 0x66 0xf 0x74 0x8d 0x10 0x2 0x0 0x0 0x66 0xf 0x74 0x85 0x0 0x2 0x0 0x0 0x66 0xf 0xdb 0xc1 0x66 0xf 0xd7 0xc0 0x3d 0xff 0xff 0x0 0x0 0x74 0x35 0xc7 0x85 0x20 0x2 0x0 0x0 0xaa 0x65 0x13 0x71 0x8b 0x85 0x20 0x2 0x0 0x0 0x3d 0x70 0x10 0x1a 0x1d 0x90 0x90 0x90 0x90 0x90 0x90 0x48 0x8b 0x85 0xd0 0x2 0x0 0x0 0x48 0x83 0xbd 0xd8 0x2 0x0 0x0 0x10 0x72 0x34 0x48 0x8b 0x8d 0xc0 0x2 0x0 0x0 0xeb 0x32 0x65 0x48 0x8b 0x4 0x25 0x60 0x0 0x0 0x0 0x48 0xb9 0x1f 0x2c 0xf3 0x20 0x6a 0xcc 0x28 0xa2 0x48 0x39 0x48 0x30 0xf 0x85 0x4 0xd9 0x2 0x0"
code = bytes(int(x, 16) for x in hex_words.split())
md = Cs(CS_ARCH_X86, CS_MODE_64)
for insn in md.disasm(code, start):
    print(f"0x{insn.address:x}: {insn.mnemonic} {insn.op_str}")
