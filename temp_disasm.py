from capstone import Cs, CS_ARCH_X86, CS_MODE_64
hex_words = "0x8d 0xc0 0x2 0x0 0x0 0x48 0x89 0x8d 0x20 0x2 0x0 0x0 0x48 0x89 0x85 0x28 0x2 0x0 0x0 0x48 0x8d 0x8d 0x20 0x2 0x0 0x0 0xe8 0x71 0xf1 0x3e 0x0 0x84 0xc0 0xf 0x85 0xba 0x3 0x0 0x0 0xf 0x31 0x48 0xc1 0xe2 0x20 0x48 0x9 0xc2 0x48 0xb8 0x2d 0x7f 0x95 0x4c 0x2d 0xf4 0x51 0x58 0x48 0xf 0xaf 0xc2 0x48 0xb9 0x6e 0xab 0x0 0x67 0xf8 0xda 0xc3 0xc1 0x48 0x1 0xc1 0x48 0x89 0xc8 0x48 0xc1 0xe8 0x2d 0x48 0x89 0xca 0x48 0xc1 0xea 0x1b 0x31 0xd0 0x48 0xc1 0xe9 0x3b 0xd3 0xc8 0x3d 0xd9 0xfb 0x7a 0x10 0xf 0x87 0x75 0x3 0x0 0x0 0x48 0x8b 0x8d 0xd8 0x2 0x0 0x0 0x48 0x8b 0x85 0xc0 0x2 0x0 0x0 0x4c 0x8b 0x85 0xd0 0x2 0x0 0x0 0xc7 0x85 0x20 0x2 0x0 0x0 0x18 0x48 0xab 0x30 0x8b 0x95 0x20 0x2 0x0 0x0 0x81 0xfa 0x67 0x10 0x1a 0x1d 0x90 0x90 0x90 0x90 0x90 0x90 0x48 0x83 0xf9 0x10 0x48 0x8d 0x95 0xc0 0x2 0x0 0x0 0x48 0xf 0x43 0xd0 0x48 0x8d 0xb5 0x20 0x2 0x0 0x0 0x48 0x89 0xf1 0xe8 0xd5 0x6d 0x39 0x0 0xc7 0x85 0x18 0x3 0x0 0x0 0xe7 0xb7 0x57 0xcf 0x8b 0x85 0x18 0x3 0x0 0x0 0xa8 0x1 0xf 0x84 0xa0 0x27 0x0 0x0 0x48 0x8b 0xbd 0x30 0x2 0x0 0x0 0x48 0x89 0xf8 0x48 0x83 0xc0 0x2 0x48 0x8d 0x44 0x3f 0x4 0x48 0xc7 0xc1 0xff 0xff 0xff 0xff 0x48 0xf 0x49 0xc8 0xe8 0x6e 0x83 0x47 0x0 0x49 0x89 0xc0 0x66 0xc7 0x0 0x46 0x1 0x66 0xc7 0x44 0x78 0x2 0x0 0x0 0x48 0x83 0xbd 0x38 0x2 0x0 0x0 0x10 0x72 0x7 0x48 0x8b 0xb5 0x20 0x2 0x0 0x0 0x48 0x85 0xff 0xf 0x84 0x16 0x1 0x0 0x0 0x48 0x8d 0x4 0x3e 0x48 0x83 0xff 0x18 0x72 0x1e 0x49 0x8d 0xc 0x78 0x48 0x83 0xc1 0x2 0x48 0x39 0xce 0xf 0x83 0xb5 0x0 0x0 0x0 0x49 0x8d 0x48 0x2 0x48 0x39 0xc1 0xf 0x83 0xa8 0x0 0x0 0x0 0x48 0x89 0xf2 0x4c 0x89 0xc1 0x41 0x89 0xc1 0x41 0x29 0xd1 0x41 0x83 0xe1 0x7 0x74 0x15 0x44 0xf 0xbe 0x16 0x66 0x44 0x89 0x51 0x2 0x48 0x83 0xc1 0x2 0x48 0xff 0xc6 0x49 0xff 0xc9 0x75 0xeb 0x48 0x29 0xc2 0x48 0x83 0xfa 0xf8 0xf 0x87 0xba 0x0 0x0 0x0 0x31 0xd2 0x44 0xf 0xbe 0xc 0x16 0x66 0x44 0x89 0x4c 0x51 0x2 0x44 0xf 0xbe 0x4c 0x16 0x1 0x66 0x44 0x89 0x4c 0x51 0x4 0x44 0xf 0xbe 0x4c 0x16 0x2 0x66 0x44 0x89 0x4c 0x51 0x6 0x44 0xf 0xbe 0x4c 0x16 0x3 0x66 0x44 0x89 0x4c 0x51 0x8 0x44 0xf 0xbe 0x4c 0x16 0x4 0x66 0x44 0x89 0x4c 0x51 0xa 0x44 0xf 0xbe 0x4c 0x16 0x5 0x66 0x44 0x89 0x4c 0x51 0xc 0x44 0xf 0xbe 0x4c 0x16 0x6 0x66 0x44 0x89 0x4c 0x51 0xe 0x44 0xf 0xbe 0x4c 0x16 0x7 0x66 0x44 0x89 0x4c 0x51 0x10 0x4c 0x8d 0xc 0x16 0x49 0x83 0xc1 0x8 0x48 0x83 0xc2 0x8 0x49 0x39 0xc1 0x75 0x90 0xeb 0x46 0x48 0x89 0xfa 0x48 0x83 0xe2 0xf0 0x31 0xc9 0xf3 0xf 0x7e 0x4 0xe 0x66 0xf 0x60"
code = bytes(int(x, 16) for x in hex_words.split())
start = 5
code = code[start:]
addr = 0x7ff933f20600 + start
md = Cs(CS_ARCH_X86, CS_MODE_64)
for insn in md.disasm(code, addr):
    print(f"0x{insn.address:x}: {insn.mnemonic} {insn.op_str}")
    if insn.address >= addr + 0x80:
        break
