from capstone import Cs, CS_ARCH_X86, CS_MODE_64
hex_words = "0xf 0x74 0x8d 0x10 0x2 0x0 0x0 0x66 0xf 0x74 0x85 0x0 0x2 0x0 0x0 0x66 0xf 0xdb 0xc1 0x66 0xf 0xd7 0xc0 0x3d 0xff 0xff 0x0 0x0 0x74 0x35 0xc7 0x85 0x20 0x2 0x0 0x0 0xaa 0x65 0x13 0x71 0x8b 0x85 0x20 0x2 0x0 0x0 0x3d 0x70 0x10 0x1a 0x1d 0x90 0x90 0x90 0x90 0x90 0x90 0x48 0x8b 0x85 0xd0 0x2 0x0 0x0 0x48 0x83 0xbd 0xd8 0x2 0x0 0x0 0x10 0x72 0x34 0x48 0x8b 0x8d 0xc0 0x2 0x0 0x0 0xeb 0x32 0x65 0x48 0x8b 0x4 0x25 0x60 0x0 0x0 0x0 0x48 0xb9 0x1f 0x2c 0xf3 0x20 0x6a 0xcc 0x28 0xa2"
code = bytes(int(x, 16) for x in hex_words.split())
addr = 0x7ff933f20580
md = Cs(CS_ARCH_X86, CS_MODE_64)
for insn in md.disasm(code, addr):
    print(f"0x{insn.address:x}: {insn.mnemonic} {insn.op_str}")
