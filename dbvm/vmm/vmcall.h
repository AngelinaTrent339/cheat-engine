#ifndef VMCALL_H_
#define VMCALL_H_

#include "vmmhelper.h"
#include "vmcallstructs.h"

#define VMCALL_GETVERSION 183
#define VMCALL_CHANGEPASSWORD 67
#define VMCALL_READ_PHYSICAL_MEMORY 241
#define VMCALL_WRITE_PHYSICAL_MEMORY 92
#define VMCALL_REDIRECTINT1 156
#define VMCALL_INT1REDIRECTED 229
#define VMCALL_CHANGESELECTORS 74
#define VMCALL_BLOCK_INTERRUPTS 198
#define VMCALL_RESTORE_INTERRUPTS 133

#define VMCALL_REGISTER_CR3_EDIT_CALLBACK 87
#define VMCALL_RETURN_FROM_CR3_EDIT_CALLBACK 212
#define VMCALL_GETCR0 165
#define VMCALL_GETCR3 46
#define VMCALL_GETCR4 219
#define VMCALL_RAISEPRIVILEGE 128
#define VMCALL_REDIRECTINT14 73
#define VMCALL_INT14REDIRECTED 247
#define VMCALL_REDIRECTINT3 91
#define VMCALL_INT3REDIRECTED 184

//dbvm v6+
#define VMCALL_READMSR 162
#define VMCALL_WRITEMSR 235

#define VMCALL_ULTIMAP 79
#define VMCALL_ULTIMAP_DISABLE 203


//dbvm v7
#define VMCALL_SWITCH_TO_KERNELMODE 148
#define VMCALL_DISABLE_DATAPAGEFAULTS 65
#define VMCALL_ENABLE_DATAPAGEFAULTS 230
#define VMCALL_GETLASTSKIPPEDPAGEFAULT 117

#define VMCALL_ULTIMAP_PAUSE 186
#define VMCALL_ULTIMAP_RESUME 72

#define VMCALL_ULTIMAP_DEBUGINFO 245

#define VMCALL_PSODTEST 134

//dbvm11
#define VMCALL_GETMEM 89
#define VMCALL_JTAGBREAK 214
#define VMCALL_GETNMICOUNT 157

#define VMCALL_WATCH_WRITES 48
#define VMCALL_WATCH_READS 221
#define VMCALL_WATCH_RETRIEVELOG 126
#define VMCALL_WATCH_DELETE 195

#define VMCALL_CLOAK_ACTIVATE 83
#define VMCALL_CLOAK_DEACTIVATE 156
#define VMCALL_CLOAK_READORIGINAL 77
#define VMCALL_CLOAK_WRITEORIGINAL 240

#define VMCALL_CLOAK_CHANGEREGONBP 115
#define VMCALL_CLOAK_REMOVECHANGEREGONBP 178

#define VMCALL_EPT_RESET 52

#define VMCALL_LOG_CR3VALUES_START 199
#define VMCALL_LOG_CR3VALUES_STOP 136

#define VMCALL_REGISTERPLUGIN 71
#define VMCALL_RAISEPMI 244
#define VMCALL_ULTIMAP2_HIDERANGEUSAGE 109

#define VMCALL_ADD_MEMORY 182
//#define VMCALL_DISABLE_EPT 58 dus nut wurk


#ifdef STATISTICS
#define VMCALL_GET_STATISTICS 167
#endif

#define VMCALL_WATCH_EXECUTES 206
#define VMCALL_SETTSCADJUST   143
#define VMCALL_SETSPEEDHACK   78
#define VMCALL_CAUSEDDEBUGBREAK 251

#define VMCALL_DISABLE_TSCADJUST 124

#define VMCALL_CLOAKEX_ACTIVATE 189

#define VMCALL_DISABLETSCHOOK 66
#define VMCALL_ENABLETSCHOOK 233

#define VMCALL_WATCH_GETSTATUS 118

#define VMCALL_CLOAK_TRACEONBP 172
#define VMCALL_CLOAK_TRACEONBP_REMOVE 85
#define VMCALL_CLOAK_TRACEONBP_READLOG 248
#define VMCALL_CLOAK_TRACEONBP_GETSTATUS 131
#define VMCALL_CLOAK_TRACEONBP_STOPTRACE 94

#define VMCALL_GETBROKENTHREADLISTSIZE 207
#define VMCALL_GETBROKENTHREADENTRYSHORT 144
#define VMCALL_GETBROKENTHREADENTRYFULL 69
#define VMCALL_SETBROKENTHREADENTRYFULL 232
#define VMCALL_RESUMEBROKENTHREAD 119


#define VMCALL_HIDEDBVMPHYSICALADDRESSES 176
#define VMCALL_HIDEDBVMPHYSICALADDRESSESALL 53

#define VMCALL_KERNELMODE 228
#define VMCALL_USERMODE 161

#define VMCALL_DEBUG_SETSPINLOCKTIMEOUT 86


extern int hasEPTsupport;
extern int hasNPsupport;



int handleVMCall(pcpuinfo currentcpuinfo, VMRegisters *vmregisters);

void returnFromCR3Callback(pcpuinfo currentcpuinfo, VMRegisters *vmregisters, unsigned long long newcr3);
QWORD readMSRSafe(DWORD msr);
void writeMSRSafe(DWORD msr, QWORD value);

int raiseInvalidOpcodeException(pcpuinfo currentcpuinfo); //
int raisePagefault(pcpuinfo currentcpuinfo, UINT64 address);

void psod(void); //freezes DBVM

#endif /*VMCALL_H_*/
